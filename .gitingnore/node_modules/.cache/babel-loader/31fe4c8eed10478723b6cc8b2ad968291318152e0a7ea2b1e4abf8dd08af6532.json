{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var userSlice=createSlice({name:'user',initialState:{user:null},// The `reducers` field lets us define reducers and generate associated actions\nreducers:{login:function login(state,action){state.user=action.payload;},// Use the PayloadAction type to declare the contents of `action.payload`\nlogout:function logout(state){state.user=null;}}});var _userSlice$actions=userSlice.actions,login=_userSlice$actions.login,logout=_userSlice$actions.logout;// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport{login,logout};export var selectUser=function selectUser(state){return state.user.user;};//allows to pull the data when we need to \nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","user","reducers","login","state","action","payload","logout","_userSlice$actions","actions","selectUser","reducer"],"sources":["C:/Users/ocero/Documents/clone/clone-inlinked/src/features/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    logout: (state) => {\n      state.user = null;\n    },\n  }\n\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectUser = (state) => state.user.user; //allows to pull the data when we need to \n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,MAAO,IAAM,CAAAC,SAAS,CAAGD,WAAW,CAAC,CACnCE,IAAI,CAAE,MAAM,CACZC,YAAY,CAAE,CACZC,IAAI,CAAE,IACR,CAAC,CACD;AACAC,QAAQ,CAAE,CACRC,KAAK,CAAE,SAAAA,MAACC,KAAK,CAAEC,MAAM,CAAK,CACxBD,KAAK,CAACH,IAAI,CAAGI,MAAM,CAACC,OAAO,CAC7B,CAAC,CACD;AACAC,MAAM,CAAE,SAAAA,OAACH,KAAK,CAAK,CACjBA,KAAK,CAACH,IAAI,CAAG,IAAI,CACnB,CACF,CAEF,CAAC,CAAC,CAEK,IAAAO,kBAAA,CAA0BV,SAAS,CAACW,OAAO,CAAnCN,KAAK,CAAAK,kBAAA,CAALL,KAAK,CAAEI,MAAM,CAAAC,kBAAA,CAAND,MAAM,CAE5B;AACA;AACA;AAAA,OAAAJ,KAAA,CAAAI,MAAA,EACA,MAAO,IAAM,CAAAG,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIN,KAAK,QAAK,CAAAA,KAAK,CAACH,IAAI,CAACA,IAAI,GAAE;AAEtD,cAAe,CAAAH,SAAS,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}