{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      state.value = action.payload;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    logout: (state, action) => {\n      state.user = null;\n    }\n  }\n});\nexport const {\n  login,\n  logour\n} = userSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectUser = state => state.user.user; //allows to pull the data when we need to \n\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","user","reducers","login","state","action","value","payload","logout","logour","actions","selectUser","reducer"],"sources":["C:/Users/ocero/Documents/clone/clone-inlinked/src/features/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      state.value = action.payload;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    logout: (state, action) => {\n      state.user = null;\n    },\n  }\n\n});\n\nexport const { login, logour } = userSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectUser = (state) => state.user.user; //allows to pull the data when we need to \n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE;EACR,CAAC;EACD;EACAC,QAAQ,EAAE;IACRC,KAAK,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACxBD,KAAK,CAACE,KAAK,GAAGD,MAAM,CAACE,OAAO;IAC9B,CAAC;IACD;IACAC,MAAM,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACH,IAAI,GAAG,IAAI;IACnB;EACF;AAEF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,KAAK;EAAEM;AAAO,CAAC,GAAGX,SAAS,CAACY,OAAO;;AAElD;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAIP,KAAK,IAAKA,KAAK,CAACH,IAAI,CAACA,IAAI,CAAC,CAAC;;AAEtD,eAAeH,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}